services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000' # Expose the internal port, without binding to the same host port
    env_file:
      - .env.prod
    depends_on:
      - dbsql
      - redis_cache
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/letsencrypt # Certs from certbot
    depends_on:
      - app
    networks:
      - app_network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certs:/etc/letsencrypt # Store certs in a volume (nginx takes them)
      - ./certbot:/var/www/certbot # Required for webroot authentication
    command: >
      certonly --webroot --webroot-path=/var/www/certbot
      --email samaouss@gmail.com
      --agree-tos --no-eff-email
      -d api.bzouss.com
    networks:
      - app_network
  dbsql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network

  redis_cache:
    image: redis:7.2
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  db_data:
  certs:
